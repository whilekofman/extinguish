{"version":3,"file":"main.js","mappings":"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","sources":["webpack://extinguish/./src/scripts/board.js","webpack://extinguish/./src/scripts/extinguish-view.js","webpack://extinguish/./src/scripts/game.js","webpack://extinguish/webpack/bootstrap","webpack://extinguish/./src/index.js"],"sourcesContent":["class Board {\n        constructor(arr){\n        this.grid = Board.makeGrid(arr);\n    }\n\n\n    static makeGrid(arr) {\n        const grid = arr;\n        return grid;\n    }\n\n    winRound(){\n        for(let i = 0; i < this.grid.length; i++){\n            let row = this.grid[i]\n            for (let col = 0; col < row.length; col++){\n                if (row[col] === 1) return false \n            }\n        }\n        return true\n    }\n    \n    changeState(pos){\n        let [row, col] = pos\n        if (this.grid[row][col] === 0){\n            this.grid[row][col] = 1\n        } else {\n            this.grid[row][col] = 0\n        }\n\n    }\n\n    positionAdjuster(pos){\n        const posChangers = [\n            [0, 1], \n            [1, 0], \n            [0, -1], \n            [-1, 0] \n        ]\n        const end = this.grid.length - 1\n        const [row, col] = pos\n        if (row === 0 && col === 0) {\n           return posChangers.slice(0, 2)\n        } else if (row === 0 && col === end) {\n            return posChangers.slice(1, 3)\n        } else if (row === 0) {\n            return posChangers.slice(0, 3)\n        } else if (row === end && col === 0){\n            return [posChangers[0]].concat(posChangers.slice(-1))\n        } else if (row === end && col === end){ \n            return posChangers.slice(2)\n        } else if (row === end) {\n            return [posChangers[0]].concat(posChangers.slice(2))\n        } else if (col === end){\n            return posChangers.slice(1)\n        } else if (col === 0){\n            return posChangers.slice(0, 2).concat([posChangers[3]])\n        } else {\n            return posChangers\n        }\n\n\n    }\n\n    moveMatrix(pos) {\n\n        const [row, col] = pos\n        const neighbors = []\n        this.positionAdjuster(pos).forEach(ele => {\n                let [x, y] = ele\n                neighbors.push([row + x, col + y])\n        })\n        return neighbors\n    }\n}\n\n\n\nBoard.marks = [\n    'ðŸŒ³ðŸŒ³ðŸŒ³ðŸŒ³', \n    'ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥'\n]\n\nmodule.exports = Board;\n\n\n","const Board = require(\"./board.js\")\nconst Game = require(\"./game.js\")\n\nclass View {\n    constructor(htmlEl, game){\n        this.game = new game()\n        this.htmlEl = htmlEl\n        this.board = this.game.grid\n        this.setUpBoard(htmlEl)\n   \n        this.registerClick()\n        \n    }\n    setUpBoard(htmlEl) {\n        \n\n        let ul = document.createElement('ul')\n        this.board.grid.forEach ((row, rIdx) => {\n            row.forEach((tile, cIdx) => {\n                let state = tile\n                let pos = [rIdx, cIdx]\n                let li = document.createElement('li');\n                li.dataset.id = `${JSON.stringify(pos)}`\n                if (state === 0){\n                    li.classList.add(`${state}`,'false', 'boardpositions')\n                } else {\n                    li.classList.add(`${state}`, 'true', 'boardpositions')\n\n                }\n                if (li.classList.contains('false')){\n                    li.innerText = `${Board.marks[0]}`\n                } else {\n                    li.innerText = `${Board.marks[1]}`\n                }\n                ul.appendChild(li)\n                \n            })\n        })\n        ul.className= \"game-grid\"\n        htmlEl.appendChild(ul)\n    }\n\n    \n\n\n    redrawGrid(){\n        let allLi = this.htmlEl.getElementsByClassName(\"boardpositions\")\n        for(let li of allLi) {\n            if (li.classList.contains('false')) {\n                li.innerText = `${Board.marks[0]}`\n            } else {\n                li.innerText = `${Board.marks[1]}`\n            }\n        }\n\n    }\n\n\n    registerClick() {\n        const ul = document.querySelector('.game-grid')\n        ul.addEventListener('click', (e) => {\n            const tile = e.target\n            const tilePosition = JSON.parse(tile.dataset.id) \n            this.changeClass(tile) \n            this.board.changeState(tilePosition)    \n            let neighboringTiles = this.board.moveMatrix(tilePosition)\n            this.changeNeighbors(neighboringTiles)\n            this.redrawGrid()\n\n            if (this.board.winRound()) {\n                this.redrawGrid()\n                window.location.reload();\n\n                console.log('congratulations!')\n               \n            }\n\n        })\n    } \n    \n    \n\n    changeNeighbors(neighbors) {\n        for (let pos of neighbors) {\n            this.board.changeState(pos)\n            const dataId = JSON.stringify(pos)\n            const tile = document.querySelector(`[data-id=\"${dataId}\"]`)\n            this.changeClass(tile)\n        }\n    }\n\n    changeClass(li){\n        if (li.classList.contains('true')) {\n            li.classList.replace('true', 'false');\n        } else if (li.classList.contains('false')) {\n            li.classList.replace('false', 'true')\n        }\n    }\n\n}\n\n\n\nmodule.exports = View;\n\n","const Board = require(\"./board\")\n\n\nclass Game {\n    constructor() {\n\n        this.grid = new Board(this.easyLevels())\n    }\n\n    easyLevels() {\n        function getRandomInt(max) {\n            return Math.floor(Math.random() * max);\n        }\n        let lengthArr = Game.level1.length\n        let randomEasyIndex = getRandomInt(lengthArr)\n\n        let randomEasyLvl = Game.level1[randomEasyIndex]\n\n        return this.numsToGrid(randomEasyLvl)\n\n    }\n    \n\n    numsToGrid(arr) {\n        const grid = []\n        arr.forEach(num => {\n            let stringRow = ('0000' + num.toString(2)).split('').slice(-5)\n            let row = []\n            stringRow.forEach(num =>{\n                row.push(Math.floor(num))\n            } )\n            grid.push(row)\n        })\n        return grid\n    }\n}\nconst topRightCorner = [3, 1, 0, 0, 0]\nconst botRightCorner = topRightCorner.reverse()\nconst topLeftCorner = [24, 16, 0, 0, 0]\nconst botLeftCorner = topLeftCorner.reverse()\nconst topLCLT = [24, 16, 16, 24, 16]\nconst plus = [7, 15, 6, 7, 2]\nconst original =[31, 0, 31, 0, 31]\n\nGame.level1 = [\n    topRightCorner, botRightCorner, topLeftCorner, botLeftCorner, topLCLT, plus, original\n]\n\n\n\n\n\n\nwindow.view = Game\nmodule.exports = Game;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const View = require(\"../src/scripts/extinguish-view.js\")\nconst Game = require(\"../src/scripts/game.js\")\nconst Board = require(\"../src/scripts/board.js\")\n\nwindow.View = View;\ndocument.addEventListener('DOMContentLoaded', () => {\n    const main = document.getElementById('gameboard')\n    new View(main, Game);\n\n    \n})"],"names":["Board","constructor","arr","this","grid","makeGrid","winRound","i","length","row","col","changeState","pos","positionAdjuster","posChangers","end","slice","concat","moveMatrix","neighbors","forEach","ele","x","y","push","marks","module","exports","require","htmlEl","game","board","setUpBoard","registerClick","ul","document","createElement","rIdx","tile","cIdx","state","li","dataset","id","JSON","stringify","classList","add","contains","innerText","appendChild","className","redrawGrid","allLi","getElementsByClassName","querySelector","addEventListener","e","target","tilePosition","parse","changeClass","neighboringTiles","changeNeighbors","window","location","reload","console","log","dataId","replace","Game","easyLevels","randomEasyIndex","max","level1","Math","floor","random","randomEasyLvl","numsToGrid","num","stringRow","toString","split","topRightCorner","botRightCorner","reverse","topLeftCorner","botLeftCorner","view","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","View","main","getElementById"],"sourceRoot":""}